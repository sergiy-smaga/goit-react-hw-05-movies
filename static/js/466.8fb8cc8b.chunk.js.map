{"version":3,"file":"static/js/466.8fb8cc8b.chunk.js","mappings":"8PAGaA,EAAYC,EAAAA,GAAAA,IAAH,oFAKTC,EAASD,EAAAA,GAAAA,OAAH,mPAaNE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,8S,8KCnBVI,EAASJ,EAAAA,GAAAA,OAAH,+MAWND,EAAYC,EAAAA,GAAAA,KAAH,oFAKTK,EAAUL,EAAAA,GAAAA,IAAH,8I,SCXL,SAASM,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAcjB,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEIC,EAAAA,EAAAA,IAAgBX,GAFpB,OAEVK,EAFU,OAGhBC,EAASD,GAHO,gDAKhBO,QAAQC,IAAR,MALgB,yDAAH,qDAQjBH,GACD,GAAE,CAACV,KAECK,EACH,OAAO,KAGT,IAAQS,EAAuDT,EAAvDS,OAAQC,EAA+CV,EAA/CU,SAAUC,EAAqCX,EAArCW,aAAcC,EAAuBZ,EAAvBY,MAAOC,EAAgBb,EAAhBa,YAE/C,OACEb,IAAU,CAAC,IACT,UAACb,EAAD,YACE,SAACK,EAAD,CAAQsB,QAAS,0BAAMjB,EAAQ,oBAACK,EAASa,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,QAAvC,EAAjB,sBAGA,UAACvB,EAAD,YACE,gBACEwB,MAAM,MACNC,IAAG,0CAAqCL,GACxCM,IAAKP,KAEP,4BACE,wBAAKA,KACL,yCAAgC,GAAfD,GAAmBS,UAApC,SACA,sCACA,uBAAIV,KACJ,oCACA,8BAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAQY,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,EAAMC,KAAO,GAAnC,GAAwC,aAG/D,oDACA,UAAC/B,EAAD,YACE,SAAC,KAAD,CAAYgC,GAAG,OAAf,mBACA,SAAC,KAAD,CAAYA,GAAG,UAAf,yBAEF,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAKT,C,mMC1DKC,E,MAAWC,GAAAA,OAAa,CAC5BC,QAHc,gCAIdC,OAAQ,CAAEC,QALI,sCAQHC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASM,IAAI,eAAgB,CAClDH,OAAQ,CACNO,MAAAA,KAHqB,uBACjBH,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,sDASX9B,EAAe,mCAAG,WAAMiC,GAAN,yFACNX,EAASM,IAAT,gBAAsBK,IADhB,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfK,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAASM,IAAT,gBAAsBK,EAAtB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKM,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,yFACNX,EAASM,IAAT,gBAAsBK,EAAtB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/SharedLayout/SharedLayoutStyled.js","pages/MovieDetails/StyledMovieDetails.js","pages/MovieDetails/MovieDetails.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n  nav {\n    display: flex;\n    gap: 10px;\n  }\n`;\nexport const StyledLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  transition: 300ms ease;\n  background-color: #eee;\n\n  &:hover {\n    background-color: #ddd;\n  }\n  &.active {\n    color: white;\n    background-color: #bbb;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  padding: 10px;\n  border-radius: 5px;\n  outline: none;\n  background-color: #eee;\n  border: 1px solid #eee;\n  margin-bottom: 20px;\n  :focus {\n    border: 1px solid #bbb;\n  }\n`;\nexport const Container = styled.main`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 15px;\n  border-bottom: 2px solid #bbb;\n  div {\n    padding: 20px;\n  }\n`;\n","import { Outlet, useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieDetails } from 'service/api';\nimport { Suspense } from 'react';\nimport { StyledLink } from 'components/SharedLayout/SharedLayoutStyled';\nimport { Button, Container, Wrapper } from './StyledMovieDetails';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const movie = await getMovieDetails(movieId);\n        setMovie(movie);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { genres, overview, vote_average, title, poster_path } = movie;\n\n  return (\n    movie !== {} && (\n      <Container>\n        <Button onClick={() => navigate(location.state?.from ?? '/home')}>\n          Go back\n        </Button>\n        <Wrapper>\n          <img\n            width=\"250\"\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n          <div>\n            <h2>{title}</h2>\n            <p>User Score: {(vote_average * 10).toFixed()} %</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{genres?.reduce((acc, genre) => acc + genre.name + ' ', '')}</p>\n          </div>\n        </Wrapper>\n        <h3>Additional information</h3>\n        <Wrapper>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </Wrapper>\n        <Suspense fallback={<div>...Loading</div>}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    )\n  );\n}\n","import axios from 'axios';\n\nconst api_key = '645922652d3009b0573b5ea89bdd29cc';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Container","styled","Header","StyledLink","NavLink","Button","Wrapper","MovieDetails","movieId","useParams","navigate","useNavigate","useState","movie","setMovie","location","useLocation","useEffect","fetchMovies","getMovieDetails","console","log","genres","overview","vote_average","title","poster_path","onClick","state","from","width","src","alt","toFixed","reduce","acc","genre","name","to","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrending","get","data","results","searchMovie","query","id","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}