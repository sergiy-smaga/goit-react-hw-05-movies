{"version":3,"file":"static/js/99.2afc4e1d.chunk.js","mappings":"wMAEaA,E,QAAOC,GAAAA,GAAH,6N,SCAF,SAASC,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC5BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACjB,OACE,SAACR,EAAD,WACE,SAAC,KAAD,CAAMS,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAhD,SACGC,KAFMD,EAMd,KAGN,C,gKChBYK,E,QAAOX,GAAAA,KAAH,gT,SCIF,SAASY,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAE/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CACA,IAAMK,EAAW,mCAAG,8GAEKC,EAAAA,EAAAA,IAAYN,GAFjB,OAEVd,EAFU,OAGhBiB,EAAUjB,GAHM,gDAKhBqB,QAAQC,IAAR,MALgB,qGAAH,qDAUjBH,GAXkB,CAYnB,GAAE,CAACL,IAOJ,OACE,iCACE,gDACA,UAACL,EAAD,CAAMc,SARW,SAAAC,GACnBA,EAAEC,iBACFZ,EAAgB,CAAEC,MAAOU,EAAEE,OAAOC,SAASb,MAAMc,QACjDJ,EAAEE,OAAOG,OACV,EAIG,WACE,kBAAOC,YAAY,oBAAoBC,KAAK,QAAQC,KAAK,UACzD,0CAEDhC,EAAOiC,OAAS,IAAK,SAAClC,EAAA,EAAD,CAAWC,OAAQA,MAG9C,C,mMCrCKkC,E,MAAWC,GAAAA,OAAa,CAC5BC,QAHc,gCAIdC,OAAQ,CAAEC,QALI,sCAQHC,EAAW,mCAAG,sGACFL,EAASnB,IAAI,uBADX,uBACjByB,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXrB,EAAW,mCAAG,WAAMN,GAAN,yFACFoB,EAASnB,IAAI,eAAgB,CAClDsB,OAAQ,CACNvB,MAAAA,KAHqB,uBACjB0B,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,sDASXC,EAAe,mCAAG,WAAMtC,GAAN,yFACN8B,EAASnB,IAAT,gBAAsBX,IADhB,uBACrBoC,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfG,EAAe,mCAAG,WAAMvC,GAAN,yFACN8B,EAASnB,IAAT,gBAAsBX,EAAtB,aADM,uBACrBoC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKI,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAMzC,GAAN,yFACN8B,EAASnB,IAAT,gBAAsBX,EAAtB,aADM,uBACrBoC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/MovieList/MovieListStyled.js","components/MovieList/MovieList.jsx","pages/Movies/StyledMovies.js","pages/Movies/Movies.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  a {\n    margin: 5px;\n    padding: 10px;\n    background-color: #eee;\n    border-radius: 5px;\n    cursor: pointer;\n    color: #000;\n    &:hover {\n      background-color: #ddd;\n    }\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Item } from './MovieListStyled';\nexport default function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <Item key={id}>\n            <Link state={{ from: location }} to={`/movies/${id}`}>\n              {title}\n            </Link>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n  gap: 10px;\n  input,\n  button {\n    padding: 10px;\n    border-radius: 5px;\n    outline: none;\n    background-color: #eee;\n    border: 1px solid #eee;\n    :focus {\n      border: 1px solid #bbb;\n    }\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { searchMovie } from 'service/api';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport { Form } from './StyledMovies';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchMovies = async () => {\n      try {\n        const movies = await searchMovie(query);\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        // console.log('finally');\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.query.value });\n    e.target.reset();\n  };\n  return (\n    <>\n      <h2>Find movie by name</h2>\n      <Form onSubmit={handleSubmit}>\n        <input placeholder=\"put in movie name\" name=\"query\" type=\"text\" />\n        <button>Search</button>\n      </Form>\n      {movies.length > 0 && <MovieList movies={movies} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst api_key = '645922652d3009b0573b5ea89bdd29cc';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Item","styled","MovieList","movies","location","useLocation","map","id","title","state","from","to","Form","Movies","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovies","useEffect","fetchMovies","searchMovie","console","log","onSubmit","e","preventDefault","target","elements","value","reset","placeholder","name","type","length","instance","axios","baseURL","params","api_key","getTrending","data","results","getMovieDetails","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}