{"version":3,"file":"static/js/511.d8525dbc.chunk.js","mappings":"uQAEaA,E,QAAOC,GAAAA,GAAH,gK,SCGF,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgBP,GAFnB,OAEVG,EAFU,OAGhBC,EAAQD,GAHQ,gDAKhBK,QAAQC,IAAR,MALgB,yDAAH,qDAQjBH,GACD,GAAE,CAACN,KAEF,SAACH,EAAD,UACmB,IAAhBM,EAAKO,QACJP,EAAKQ,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC/B,OACEA,IACE,2BACE,wBAAKF,KACL,gBACEG,MAAM,MACNC,IAAG,0CAAqCF,GACxCG,IAAKL,KAEP,wCACA,uBAAIC,MARGF,EAYd,KAGR,C,mMCpCKO,E,MAAWC,GAAAA,OAAa,CAC5BC,QAHc,gCAIdC,OAAQ,CAAEC,QALI,sCAQHC,EAAW,mCAAG,sGACFL,EAASM,IAAI,uBADX,uBACjBC,EADiB,EACjBA,KADiB,kBAElBA,EAAKC,SAFa,2CAAH,qDAKXC,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASM,IAAI,eAAgB,CAClDH,OAAQ,CACNO,MAAAA,KAHqB,uBACjBH,EADiB,EACjBA,KADiB,kBAMlBA,EAAKC,SANa,2CAAH,sDASXG,EAAe,mCAAG,WAAMlB,GAAN,yFACNO,EAASM,IAAT,gBAAsBb,IADhB,uBACrBc,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfnB,EAAe,mCAAG,WAAMK,GAAN,yFACNO,EAASM,IAAT,gBAAsBb,EAAtB,aADM,uBACrBc,EADqB,EACrBA,KADqB,kBAEtBA,EAAKvB,MAFiB,2CAAH,sDAKf4B,EAAe,mCAAG,WAAMnB,GAAN,yFACNO,EAASM,IAAT,gBAAsBb,EAAtB,aADM,uBACrBc,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qD","sources":["components/Cast/StyledCast.js","components/Cast/Cast.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  li {\n    width: 150px;\n    text-align: center;\n    img {\n      margin: 0 auto;\n    }\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCredits } from 'service/api';\nimport { List } from './StyledCast';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const cast = await getMovieCredits(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n  return (\n    <List>\n      {cast.length !== 0 &&\n        cast.map(({ id, name, character, profile_path }) => {\n          return (\n            profile_path && (\n              <li key={id}>\n                <h4>{name}</h4>\n                <img\n                  width=\"100\"\n                  src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                  alt={name}\n                />\n                <p>Character: </p>\n                <p>{character}</p>\n              </li>\n            )\n          );\n        })}\n    </List>\n  );\n}\n","import axios from 'axios';\n\nconst api_key = '645922652d3009b0573b5ea89bdd29cc';\nconst baseURL = 'https://api.themoviedb.org/3/';\n\nconst instance = axios.create({\n  baseURL,\n  params: { api_key },\n});\n\nexport const getTrending = async () => {\n  const { data } = await instance.get('trending/movie/week');\n  return data.results;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      query,\n    },\n  });\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["List","styled","Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovies","getMovieCredits","console","log","length","map","id","name","character","profile_path","width","src","alt","instance","axios","baseURL","params","api_key","getTrending","get","data","results","searchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}